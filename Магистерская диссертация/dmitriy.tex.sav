\documentclass[a4paper]{report}

\def\baselinestretch{1.1}
\usepackage[14pt]{extsizes}
\usepackage[utf8]{inputenc}
\usepackage[russian]{babel}
\usepackage{indentfirst}
\usepackage{mathrsfs}

%%%%%%%%%%%%%%%%% Символы, графика %%%%%%%%%%%%%%%%%%%%%

\usepackage[T2A]{fontenc}
\usepackage{amsmath,amssymb,amsfonts,amsthm}
\newcommand\dsone{\mathds{H}}
\usepackage{graphicx}
\usepackage{color}
\usepackage[pdftex,colorlinks,linkcolor=blue,citecolor=blue]{hyperref}
\usepackage{pgfplots}
\usepackage{tikz}
\usepackage{array}
\newcolumntype{P}[1]{>{\centering\arraybackslash}p{#1}}

%%%%%%%%% Разметка страницы %%%%%%%%%

\bibliographystyle{plain}  % Change this to your preferred style
\renewcommand{\thetable}{\arabic{table}}
\usepackage{indentfirst}
\topmargin=-1.5cm %отступ сверху
\oddsidemargin=0.4cm %отступ слева (нечетные страницы)
\evensidemargin=0.4cm %(четные страницы)
\textwidth=16cm %ширина текста
\textheight=24cm
\tolerance=800
\parskip=1ex

\pagestyle{plain}

\usepackage{listings}

\definecolor{codegreen}{rgb}{0,0.6,0}
\definecolor{codegray}{rgb}{0.5,0.5,0.5}
\definecolor{codepurple}{rgb}{0.58,0,0.82}
\definecolor{backcolour}{rgb}{0.95,0.95,0.92}

\lstset{
    extendedchars=true,  % Corrected this line
    backgroundcolor=\color{backcolour},
    commentstyle=\color{codegreen},
    keywordstyle=\color{magenta},
    numberstyle=\tiny\color{codegray},
    stringstyle=\color{codepurple},
    breakatwhitespace=false,
    breaklines=true,
    captionpos=b,
    keepspaces=true,
    numbers=left,
    numbersep=3pt,
    showspaces=false,
    showstringspaces=false,
    showtabs=false,
    tabsize=1,
    basicstyle=\fontsize{10}{12}\selectfont\ttfamily
}

\begin{document}

\begin{titlepage}
	\begin{center}
		Министерство науки и высшего образования РФ\\
		ФГБОУ ВО «Тверской государственный университет»\\
		Математический факультет\\
		Направление 02.04.01 Математика и компьютерные науки\\
		Профиль <<Математическое и компьютерное моделирование>>	
	\end{center}
	
	\vspace{1.4cm}
	\begin{center}
	
		{МАГИСТЕРСКАЯ ДИССЕРТАЦИЯ}	
		
		\vspace{1.0cm}
    \large{Вариационный квантовый алгоритм с оптимизацией методом отжига}
		
		
		\vspace{1.0cm}
	\end{center}
	
	
	
	\begin{flushright}
		\begin{minipage}{80mm}
			Автор:\\
			Алешин Д.А.\\
      Подпись:
			
			\vspace{1.0cm}
			Научный руководитель:\\
			д. ф.-м. н. Цирулёв А.Н.\\
      Подпись:
			
		\end{minipage}
	\end{flushright}
	
	
	\vspace{1.6cm}
	\noindent Допущен к защите:\\
	Руководитель ООП: Цветков В.П.\\[0.3cm]
  $\underset{\textit{(подпись, дата)}}{\underline{\hspace{0.3\textwidth}}}$
	\vspace{2.2cm}
	
	
	
	\begin{center}
		Тверь 2025
	\end{center}
	
	\date{}
\end{titlepage}

\setcounter{page}{2}

\tableofcontents
\newpage

% Abstract
\addcontentsline{toc}{chapter}{\hspace{5.5mm} Введение}
\chapter*{Введение}

\chapter{Вариационные квантовые алгоритмы: общая схема}

\section{Базис Паули}

\subsection{Матричная форма}
Матрицы Паули, обозначаемые как $\sigma_x$, $\sigma_y$ и $\sigma_z$, представляют собой набор эрмитовых и унитарных $2 \times 2$ матриц. Эти матрицы играют центральную роль в описании квантовых систем с полуцелым спином, таких как электроны, и занимают важное место в теории представлений группы SU(2). Их использование охватывает широкий спектр задач в квантовой механике и квантовой теории поля.

Матрицы Паули определяются следующим образом:

$$
\sigma_x = \begin{pmatrix}
0 & 1 \\
1 & 0
\end{pmatrix}, \quad
\sigma_y = \begin{pmatrix}
0 & -i \\
i & 0
\end{pmatrix}, \quad
\sigma_z = \begin{pmatrix}
1 & 0 \\
0 & -1
\end{pmatrix}.
$$

Эти матрицы имеют ряд уникальных свойств, включая эрмитовость ($\sigma_i = \sigma_i^\dagger$) и унитарность ($\sigma_i \sigma_i^\dagger = I$). Они также удовлетворяют специфическим соотношениям коммутации и антикоммутации, что делает их полезными для описания квантовых преобразований и взаимодействий.

Коммутационные соотношения для матриц Паули выражаются следующим образом:

$$
[\sigma_i, \sigma_j] = 2i\epsilon_{ijk}\sigma_k,
$$

где $\epsilon_{ijk}$ — символ Леви-Чивиты. Эти соотношения играют важную роль в понимании квантовой динамики и описании вращений в спиновых системах.

Антикоммутационные соотношения для матриц Паули выглядят следующим образом:

$$
\{\sigma_i, \sigma_j\} = 2\delta_{ij}I,
$$

где $\delta_{ij}$ — символ Кронекера, а $I$ — единичная матрица. Эти свойства широко используются в квантовых вычислениях и других приложениях, где важна как коммутация, так и антикоммутация операторов.

Матрицы Паули находят применение в описании операторов спина. Оператор спина частицы можно выразить через линейную комбинацию матриц Паули:

$$
\vec{S} = \frac{\hbar}{2} \vec{\sigma},
$$

где $\vec{S}$ — оператор спина, $\hbar$ — приведенная постоянная Планка. Это позволяет моделировать взаимодействие спина с внешними полями и другими квантовыми системами.

В квантовой информации матрицы Паули формируют базис для всех эрмитовых матриц размерности $2 \times 2$. Любой эрмитов оператор может быть представлен как:

$$
A = a_0 I + a_x \sigma_x + a_y \sigma_y + a_z \sigma_z,
$$

где $a_0, a_x, a_y, a_z$ — вещественные коэффициенты. Это представление используется в квантовой томографии и других вычислительных задачах.

\subsection{Операторная форма}

Перейдем к рассмотрению операторной формы матриц Паули в контексте квантовой системы из $n$ кубитов. Каждый кубит связан с двумерным Гильбертовым пространством $\mathcal{H}$. Для системы из $n$ кубитов, полное пространство $\mathcal{H}_n$ образуется как тензорное произведение индивидуальных пространств, и его размерность равна $2^n$.

Теперь определим операторную форму матриц Паули в этом пространстве. Для ортонормированного базиса $\{|0\rangle, |1\rangle\}$, соответствующего каждому кубиту, мы можем выразить операторы Паули как:

\begin{align*}
    \hat{\sigma}_0 = |0\rangle\langle0| + |1\rangle\langle1|,\; \hat{\sigma}_1 = |0\rangle\langle1| + |1\rangle\langle0|,     \\
    \hat{\sigma}_2 = -i|0\rangle\langle1| + i|1\rangle\langle0|,\;  \hat{\sigma}_3 = |0\rangle\langle0| - |1\rangle\langle1|,
\end{align*}

Эти операторы эрмитовы и унитарны и составляют основу в $\mathcal{H}$. Каждый из них может быть выражен в виде тензорного произведения операторов на отдельных кубитах:

$$
\hat{\sigma}_{k_1\ldots k_n} = \hat{\sigma}_{k_1} \otimes \ldots \otimes \hat{\sigma}_{k_n},
$$

где $k_i \in \{0, 1, 2, 3\}$. Таким образом, операторная форма матриц Паули позволяет описывать сложные квантовые состояния и преобразования в системах из нескольких кубитов.

\section{Целевая функция и анзац}

\section{Общая схема алгоритма}

\section{Оптимизация}

\chapter{Вариационный квантовый алгоритм на основе метода отжига}

\section{Метод отжига}

Метод имитации отжига (Simulated Annealing, SA) представляет собой стохастический алгоритм, который применяется для глобальной оптимизации сложных функций и систем. Алгоритм заимствует свою концепцию из процесса физического отжига металлов, где материал нагревается до высокой температуры и затем медленно охлаждается, что позволяет атомам достигать состояния с минимальной энергией. Этот подход оказался чрезвычайно полезным в математической оптимизации, особенно в задачах с многими локальными минимумами.

\textbf{Алгоритмическая структура и основные принципы:}

1. \textbf{Пространство состояний:} Пусть $S$ обозначает множество всех возможных состояний системы. Каждое состояние $s \in S$ оценивается с помощью целевой функции $f(s)$, которую необходимо минимизировать. Начальное состояние системы $s_0$ может быть выбрано случайным образом или с использованием эвристик, повышающих вероятность успешного поиска глобального минимума.

2. \textbf{Генерация соседних состояний:} На каждом шаге алгоритма осуществляется переход от текущего состояния $s$ к новому состоянию $s'$ из множества соседних состояний $N(s)$. Для комбинаторных задач, таких как задача коммивояжёра, соседние состояния могут определяться перестановкой элементов, а для непрерывных задач — небольшими случайными изменениями параметров.

3. \textbf{Функция стоимости и её изменение:} Изменение стоимости при переходе к новому состоянию определяется как $\Delta f = f(s') - f(s)$. Алгоритм стремится минимизировать значение $f(s)$, и новое состояние принимается на основе вероятностного критерия:

\begin{equation}
P(\Delta f, T) =
\begin{cases}
1, & \text{если } \Delta f \leq 0, \\
\exp\left(-\frac{\Delta f}{T}\right), & \text{если } \Delta f > 0,
\end{cases}
\end{equation}

где $T$ — температурный параметр. Эта вероятность позволяет алгоритму избегать застревания в локальных минимумах, принимая менее выгодные состояния с определённой вероятностью.

4. \textbf{Температурный график:} Температура $T$ управляет степенью случайности в принятии решений. Изначально устанавливается высокая температура, которая позволяет системе исследовать пространство состояний более свободно. По мере выполнения алгоритма температура уменьшается согласно выбранному графику. Один из распространённых подходов — экспоненциальное уменьшение:

\begin{equation}
T_k = T_0 \cdot \alpha^k,
\end{equation}

где $T_0$ — начальная температура, $\alpha \in (0, 1)$ — коэффициент охлаждения, и $k$ — номер итерации. Выбор графика снижения температуры критически важен для эффективности метода.

5. \textbf{Критерии остановки:} Алгоритм может завершиться при достижении предельно низкой температуры $T_{\text{min}}$, либо если улучшения в значении $f(s)$ прекращаются на определённое количество итераций. Также может использоваться фиксированное число итераций или достижение заданного уровня точности.

\textbf{Примеры и применение:}

- \textbf{Комбинаторная оптимизация:} В задачах, таких как задача коммивояжёра или задача о рюкзаке, SA позволяет исследовать огромное пространство решений. Соседние состояния определяются перестановками элементов, что позволяет алгоритму находить приближённые оптимумы.

- \textbf{Непрерывные задачи:} SA также применяется в задачах с непрерывными переменными, где используются небольшие случайные изменения переменных для генерации соседних состояний. Таким образом, метод помогает находить экстремумы сложных функций, где традиционные методы градиентного спуска могут быть неэффективны.

- \textbf{Практические применения:} Метод имитации отжига успешно используется в задачах планирования, оптимизации производственных процессов, проектирования систем и даже в задачах финансовой оптимизации, таких как управление портфелем.

\textbf{Преимущества и ограничения:}

Основные преимущества метода включают его универсальность и способность к нахождению глобальных оптимумов благодаря вероятностному характеру принятия решений. Однако эффективность алгоритма сильно зависит от правильной настройки начальных параметров и графика охлаждения. Кроме того, вычислительная сложность метода может стать проблемой для задач с высокой размерностью пространства решений.

\textbf{Дополнительные аспекты:}

- \textbf{Адаптивные методы:} В некоторых реализациях метода SA используется адаптивное изменение температуры и других параметров в зависимости от текущего состояния системы. Это позволяет улучшить сходимость и эффективность алгоритма.

- \textbf{Параллельные вычисления:} Современные вычислительные мощности позволяют реализовывать параллельные версии алгоритма, где несколько экземпляров SA работают одновременно, исследуя различные части пространства состояний. Это существенно увеличивает скорость и качество нахождения решения.

- \textbf{Гибридные методы:} SA может комбинироваться с другими методами оптимизации, такими как генетические алгоритмы или методы градиентного спуска, для улучшения эффективности решения сложных задач.


\section{Алгоритм}

\section{Сравнительные результаты тестирования}

\addcontentsline{toc}{chapter}{\hspace{5.5mm} Заключение}
\chapter*{Заключение}

\addcontentsline{toc}{chapter}{\hspace{5.5mm} Список литературы}
\chapter*{Список литературы}

https://math.spbu.ru/user/gran/sb1/lopatin.pdf  

\addcontentsline{toc}{chapter}{\hspace{5.5mm} Приложение  C{$\#$}}
\chapter*{Приложение C{$\#$}}

\end{document} 